                              ÂÂÄÄ¿ ÂÂÄÄ¿ ÚÂÄÄ¿
                              ³³  ³ ³³  ³ ³³
                              ³ÃÄÂÙ ³ÃÄÄ´ ³³
                              ³³ À¿ ³³  ³ ³³
                              ÀÙ  À ÀÙ  Á ÀÁÄÄÙ
    ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

                  Written by Roman Dolejsi (RDOS / DIMENSION)

                              December 31, 1996
                 Last update: December 31, 1996


       This is the documentation belonging to and explaining the use of

                              RAC version 0.01a
                   OPL2/OPL3 music module grabber for MS-DOS


   TOPICS covered in this document:

	 DISCLAIMER
         APOLOGIZE
	 PURPOSE OF RAC
	 REQUIREMENTS
         INSTALLATION OF RAC
         RAC IN ACTION
         DIALOG LINE
         FREQUENTLY ASKED QUESTIONS
         COPYRIGHT
         WHERE TO FIND RAC
         THANX
         CONTACTING ME


DISCLAIMER:
-----------
  Although RAC has been tested on several systems, I cannot guarantee that it
is bugless. Therefore I do not take responsibility for any damage directly or
indirectly caused by RAC as a result of known/unknown  errors in it or errors
caused by its access to your devices.


APOLOGIZE:
----------
  Sorry, english is not my  native language. However, I wrote this nice docy in
english without any help. I APOLOGIZE for any mistakes in the document. Take it
easy... Nobody is perfect.. :-)


PURPOSE OF RAC:
---------------
  Rdos Adlib Catcher is an OPL2/OPL3 music module grabber for IBM PC compatible
computers  running  MS-DOS operating system. This means that you can use it for
grabbing your favorite melody from some music player / demo or game. I've coded
it because of lack of any such grabber of this type in PC-world.


REQUIREMENTS:
-------------
  RAC is coded in protected mode 386-assembler. For grabbing you will need 386
or compatible computer without memory manager installed and adlib card. Grabbed
music can be replayed with RdosPlay (RDOS OPL Player).


INSTALLATION OF RAC:
--------------------
- first  you have to make some directory on your drive. Then you have to unpack
  there archive file RACxyyz.ZIP.
  (you probably did all this when you read these lines :-)

- RAC pack should consist of these files:

    RAC.EXE - Main file - OPL grabber
    RAC.DOC - Documentation for RAC (this file)
    RAC.REV - RAC changes/revision history file
    FILE_ID.DIZ  - quick info file

- now you have RAC successfully installed :-)


RAC IN ACTION:
--------------
  RAC can store all  acesses to Adlib (OPL2) or some OPL3 card's I/O ports into
special  file  with RAW extension. That file can be later played with something
capable of playing that (hint: what about RdosPlay?).
  After you start RAC, it initializes  internal  music  buffer. Every access to
desired  ports  will  be  stored it that buffer. Therefore you have to run some
game, demo or player which  uses  adlib. When you later  want to save buffer in
file or clear it you have to run RAC again with special parameter.


DIALOG LINE:
------------
Dialog line looks as follows:
  RAC.EXE [c] [s]

  possibilities:
    c - clear music buffer
    s - save music buffer into file RACDATA.RAW in this directory


RAW FILE SPECIFICATIONS:
------------------------
RAW is originally founded probably by Future Crew demogroup which used it in
their BBS intro StarPort. RAW file generated by RAC is a derived version
which is also capable of OPL3 extension (ie. full four port access: 388-38Bh).
RAW files can be played with RdosPlay (look at Dimension homepage).

format:   [0]=db     'RAWADATA'                 ... file identifier
          [8]=dw     clock                      ... clock speed (like c-20)
         [10]=dw     data_size dup (data)       ... adlib data
         [..]=dw     0ffffh                     ... end of file
data: parameter, command.   command==0: data==n ... wait n times.
                            command==2: data==0 ... set speed (next word)
                            command==2: data==1 ... set OPL3 port A default
                            command==2: data==2 ... set OPL3 port B default


FREQUENTLY ASKED QUESTIONS:
---------------------------
* RAC does not want to run with PM driver (EMM386/QEMM/Win) installed.
  - RAC uses clear 32-bit PM manager. It needs completely free environment
    to operate. Therefore other PM managers will NEVER be supported.
    What RAC uses is from the beginning meant as a complete memory manager
    so it's internal functionality is absolutely incompatible with anything
    other (even VCPI's ProtMode level 0).

* Coprocessor seems not to be installed when RAC is running !! Why !?!
  - I have to agree.. sorry for this.. still don't know why.. Maybe another
    version... really sorry.

* When I install RAC there is no EMS memory in system. Some of my programs
  don't want to run at all.
  - EMS services are not yet supported, sorry. Maybe another version..

* My application told me I have no VCPI compatible environment and refused
  to run when I started it under RAC.
* My application refused to run with exit message about impossibility to enter
  DPMI protected mode.
  - VCPI/DPMI are 32-bit Protected mode interfaces allowing your applications
    to run 32-bit code under other 32-bit PM environment installed in memory.
    Although these ifaces are not yet supported, there exist light of hope
    that DPMI will be supported some day.

* How much system memory takes RAC for its work ?
  - RAC takes about 1k of conventional mem. In fact, everything is in
    Xmemory (above 1MB) and takes there about 550kB. But Xmemory requirements
    probably don't bother anyone.

* Programs tend to be slower under RAC.
  - Yes, especially Adlib playing routines are slower, because PM exception
    handling eats some of the system resources.

* Are there any other known problems with RAC ?
  - RAC counts waitstates via timer. When some music does not use timer for
    playing (not such often case), RAC won't insert waitstates in generated
    RAW file - file is not playable :-( Don't know any solution right now.


WHERE TO FIND RAC:
------------------
Each time I have a new version of RAC available, I'll upload it to this place:

  ftp://sorry.vse.cz/dimension   (Dimension FTP site in Prague, Czech Republic)
 http://sorry.vse.cz/dimension   (Dimension Inet HeadQuarters, Czech Republic)

RAC will be probably also available at ftp.cdrom.com or ftp.sunet.se
FTP archives.

   Ask your local Internet or FTP expert on how to reach them.

Another way is to visit RAC's homepage at address:

    http://sorry.vse.cz/dimension/rdos/rac   (Http site in Prague, CZE)


THANX:
------
Although I did all the programming, there is a friend which helped me:

David Voracek (Assassin/Dimension) - idea, testing, suggestions

and other friends for their (mostly) betatesting..


CONTACTING ME:
--------------
  If you want to contact me, write to address listed below. If you want to send
me suggestions, tips or simply greets, send it freely. Also some money would be
good as a power and motivation for further work :-)

My address:                           E-Mail: (non-commercial)
  Roman Dolejsi (RDOS)                    roman@sorry.vse.cz
  Husova 419, Vcelna                      roman@romeo.pf.jcu.cz
  37382 Ceske Budejovice
  Czech Republic

Please do not send me E-mails longer than 150kB (because of our local smtp
server limit).

*** end of RAC documentation ***